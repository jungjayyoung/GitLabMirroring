package boj;

import java.io.*;
import java.util.*;

public class p17135 {

	
	static int n,m,D;
	static int board[][];
	static List<Integer> archers;
	
	static int ans = 0; // 잡을 수 있는 궁수의 최대 수
	
	
	static void bt(int cnt,int start) {
		
		// 궁수 3명의 자리를 정함
		if(cnt == 3) {
			
			// 먼저 적들의 위치와 현재 궁수들의 위치를 비교해 보자
			// 아래부터 적을 찾아야 가장 가까운 적을 찾을 수 있다.
			// 따라서 y = n-1 부터 시작한다.
			for(int y = n - 1; y >= 0; y--) {
				
				for(int x = 0; x <m; x++) {
					
					//적 발견
					if(board[y][x] == 1) {
						int a1x = -1;
						int a1y = -1;
						int a2x = -1;
						int a2y = -1;
						int a3x = -1;
						int a3y = -1;
						
						// 궁수 한 명 한명과의 거리를 비교한다.
						for(int i = 0; i <archers.size();i++) {
							int yy = n; // 궁수의 y좌표
							int xx = archers.get(i); // 궁수의 x좌표
							
							int dist = Math.abs(x - xx) + Math.abs(y - yy);
							
							if(dist)
							
							
						}
						
						
						
					}
					
					
				}
			}
			
			
			return;
		}
		
		for(int i = start; i < m; i++) {
			
			archers.add(i);
			bt(cnt + 1,i + 1);
			archers.remove(i);
			
			
		}
		
		
	}
	
	public static void main(String[] args) throws IOException{
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine()," ");
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		D = Integer.parseInt(st.nextToken());
		
		archers = new ArrayList<Integer>();
		board = new int[n + 1][m + 1];
		
		for(int y = 0; y < n; y++) {
			st = new StringTokenizer(br.readLine()," ");
			
			for(int x = 0; x < m; x++) {
				board[y][x] = Integer.parseInt(st.nextToken());
			}
		}
		
		bt(0,0);
		
		
		
	}

}
