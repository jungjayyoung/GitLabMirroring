package boj;

import java.io.*;
import java.util.*;


public class p1074 {
	
	static int N,r,c;
	static int board[][];
	static int cnt = 1;
	
	static void solve(int x, int y, int n) {
		
		
		
		if(n == 1) {

			for(int i = y; i < y+1;i++) {
				for(int j = x; j < x+1;x++) {
					board[i][j] = cnt++;
				}
			
			}
			
			return;
		}
		
		solve(x,y,N - 1);
		solve((int)Math.pow(2,N - 1),y,N - 1);
		solve(x,(int)Math.pow(2,N - 1),N - 1);
		solve((int)Math.pow(2,N - 1),(int)Math.pow(2,N - 1),N - 1);
		
		
	}

	public static void main(String[] args) throws IOException{

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine(), " ");
		
		N = Integer.parseInt(st.nextToken());
		r = Integer.parseInt(st.nextToken());
		c = Integer.parseInt(st.nextToken());
		
		board = new int[(int)Math.pow(2,N)][(int)Math.pow(2,N)];
		
		solve(0,0,N);
		solve((int)Math.pow(2,N - 1),0,N);
		solve(0,(int)Math.pow(2,N - 1),N);
		solve((int)Math.pow(2,N - 1),(int)Math.pow(2,N - 1),N);
		
		
		for(int y = 0; y < (int)Math.pow(2,N); y++) {
			
			for(int x = 0; x < (int)Math.pow(2,N); x++) {
				System.out.print(board[y][x] + " ");
			}
			System.out.println();
		}
		
		
	}

}
