package boj;

import java.io.*;
import java.util.*;

public class p17779 {
	static int n;
	static int[][] board;
	static int[][] boardLine;
	
	static void solve(int x,int y,int d1,int d2) {
		
		// 경계선 만들기
		int d1_cnt = 1;
		int d2_cnt = 1;
		boardLine[y][x] = 5;
		
		// 1번 경계선
		while(d1_cnt <= d1 && d2_cnt <= d2) {	
			boardLine[y - d1_cnt][x + d1_cnt] = 5;
			d1_cnt++;
		}
		
		d1_cnt = 1;
		d2_cnt = 1;
		// 2번 경계선
		while(d1_cnt <= d1 && d2_cnt <= d2) {	
			boardLine[y + d2_cnt][x + d2_cnt] = 5;
			d2_cnt++;
		}
		
		d1_cnt = 1;
		d2_cnt = 1;
		//3번 경계선
		while(d1_cnt <= d1 && d2_cnt <= d2) {	
			boardLine[y - d1 + d2_cnt][x + d1 + d2_cnt] = 5;
			d2_cnt++;
		}
		
		d1_cnt = 1;
		d2_cnt = 1;
		//4 번 경계선
		while(d1_cnt <= d1 && d2_cnt <= d2) {	
			boardLine[y + d2 - d1_cnt][x + d2 + d1_cnt] = 5;
			d1_cnt++;
		}
		
		for(int yy = 1; yy <=n; yy++) {
			for(int xx = 1; xx <=n; xx++) {
				System.out.print(boardLine[yy][xx] + " ");
			}
			System.out.println();
		}
		System.out.println();
		
		
	}
	

	public static void main(String[] args) throws IOException{

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		n = Integer.parseInt(br.readLine());
		
		board = new int[n+1][n+1];
		boardLine = new int[n+1][n+1];
		
		for(int y = 1; y <= n; y++) {

			st = new StringTokenizer(br.readLine()," ");
			for(int x = 1; x <= n; x++) {
				board[y][x] = Integer.parseInt(st.nextToken());
			}
		}
		
		
		for(int y = 1; y <=n; y++) {
			
			for(int x = 1; x <= n; x++) {
				
				for(int d1 = 1; x + d1 <= n; d1++) {
					
					for(int d2 = 1; y + d2 <= n; d2++) {
						
						if((x + d1 + d2 > n) || (y + d2 > n) || (y - d1 < 1)) continue;
						for(int[]a : boardLine) {
							Arrays.fill(a, 0);
						}
						
						solve(x,y,d1,d2);
						
						
						
					}
					
				}
				
				
			}
		}
		
		
	}

}
