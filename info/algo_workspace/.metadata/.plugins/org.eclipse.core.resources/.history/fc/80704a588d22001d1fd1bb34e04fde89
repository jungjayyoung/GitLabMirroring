package boj;

import java.io.*;
import java.util.*;

public class p16235 {
	
	static int n,m,k;
	static int[][] A;
	static List<Integer>[][] tree;
	static List<Integer>[][] dead_tree;
	static int[][] land; //현재 땅의 양분

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		st = new StringTokenizer(br.readLine()," ");
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		int k = Integer.parseInt(st.nextToken());
		
		
		A = new int[n+1][n+1];
		land = new int[n+1][n+1];
		
		tree = new List[n+1][n+1];
		dead_tree = new List[n+1][n+1];
		
		// x,y 좌표에 나무를 집어넣을 리스트를 만들어 준다.
		for(int i=0;i<n+1;i++) {
			for(int j=0;j<n+1;j++) {
				tree[i][j] = new ArrayList<Integer>();
			}
		}
		
		// 죽은 나무의 양분을 저장할 곳
		for(int i=0;i<n+1;i++) {
			for(int j=0;j<n+1;j++) {
				dead_tree[i][j] = new ArrayList<Integer>();
			}
		}
		
		// 겨울에 추가할 양분의 양 A[][] 배열을 입력받는다.
		for(int y = 0; y < n; y++) {
			
			st = new StringTokenizer(br.readLine()," ");
			for(int x = 0; x < n; x++) {
				
				A[y][x] = Integer.parseInt(st.nextToken());
			}
		}
		
		// x,y 좌표에 나무를 집어넣는다.
		for(int i =0; i < m; i++) {
			st = new StringTokenizer(br.readLine()," ");
			int a,b,c;
			a = Integer.parseInt(st.nextToken()); // y
			b = Integer.parseInt(st.nextToken()); // x
			c = Integer.parseInt(st.nextToken()); // 나이
			tree[a][b].add(c);
			
		}
		
		// 각 좌표의 나무들을 나이 순으로 오름차순 정렬해준다.
		for(int y = 0; y < n; y++) {
			for(int x =0; x < n; x++) {
				if(!tree[y][x].isEmpty()) {
					Collections.sort(tree[y][x]);
				}
			}
		}
		
		// 현재 땅의 양분
		for(int y = 0; y < n; y++) {
			for(int x =0; x < n; x++) {
				land[y][x] = 5;
			}
		}
		
		
		while(k > 0) {
			
			// 봄
			// 나이가 어린 나무부터 양분을 먹고 양분이 부족하면 그 나무는 죽는다.
			for(int y = 0; y < n; y++) {
				
				for(int x = 0; x < n; x++) {
					
					
				}
			}
			
			
			
			
			
			
			k--;
		}
		
		
		
	}

}
